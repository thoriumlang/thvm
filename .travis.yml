dist: trusty
language: cpp
git:
  depth: false
services:
  - docker
matrix:
  include:
    - os: linux
      env:
        - CC=gcc-5
        - CXX=g++-5
        - CXXFLAGS='-Wall -B/usr/lib/gcc/x86_64-linux-gnu/7'
        - SONAR=false
        - DOCKER=true
    - os: linux
      env:
        - CC=gcc-6
        - CXX=g++-6
        - CXXFLAGS='-Wall -B/usr/lib/gcc/x86_64-linux-gnu/7'
        - SONAR=false
        - DOCKER=true
    - os: linux
      env:
        - CC=gcc-7
        - CXX=g++-7
        - CXXFLAGS='-Wall'
        - SONAR=false
        - DOCKER=true
    - os: linux
      env:
        - CC=gcc-8
        - CXX=g++-8
        - CXXFLAGS='-Wall'
        - SONAR=true
        - DOCKER=false
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - g++-8
            - libstdc++-8-dev
        sonarcloud:
          organization: "thoriumlang"
          token:
            secure: $SONARQUBE_TOKEN
install:
  - |
    if [ "$DOCKER" = "false" ]; then
      sudo apt-get update
      sudo apt-get install -y $APT_PACKAGES
    fi
before_script:
  - env | grep -v SONARQUBE_TOKEN | sort
  - mkdir build; cp sonar.properties build/; cd build
script:
  - |
    if [ "$DOCKER" = "true" ]; then
      docker run --rm -it \
        -v `pwd`/..:/src:ro \
        -v `pwd`:/build \
        -e CC="$CC" \
        -e CXX="$CXX" \
        -e CXXFLAGS="$CXXFLAGS" \
        -e SONAR="$SONAR" \
        cpollet/cpp
    elif [ "$SONAR" = "true" ]; then
      cmake ..
      build-wrapper-linux-x86-64 --out-dir bw-output make clean all test
    else
      cmake ..
      make clean all test
    fi
  - |
    if [ "$SONAR" = "true" ]; then
      sonar-scanner -X -Dsonar.verbose=true -Dproject.settings=sonar.properties
    fi